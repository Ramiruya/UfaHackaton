import logging
import telebot
import json
from difflib import SequenceMatcher

# –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç FAQ

API_TOKEN = 'TG_BOT_TOKEN'
bot = telebot.TeleBot(API_TOKEN)

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—ã–∑–æ–≤–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
rage_count = 0
# —é–∑–µ—Ä –∞–π–¥–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
operator_user_id = []
# —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
states = {}
# —é–∑–µ—Ä –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ø–∞–≤—à–µ–≥–æ –≤ —Å–µ–∞–Ω—Å –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É
# qa_chat_id = []
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ FAQ –¥–∞–Ω–Ω—ã—Ö –∏–∑ json —Ñ–∞–π–ª–∞
with open('FAQ.json', 'r') as f:
    data = json.load(f)


# –≤—ã—á–∏—Å–ª–∏–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –±–∞–∑–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def similar(a, b):
    return SequenceMatcher(None, a, b).ratio()


# –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —á–∞—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∞–Ω—Å–∞ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
def to_operator(chat_id):
    global bot, states
    # qa_chat_id
    # qa_chat_id.append(chat_id)
    bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ–ø–µ—Ä–∞—Ç–æ—Ä—É:')
    states[chat_id] = "wait_question"


# –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—É
@bot.message_handler(func=lambda message: states.get(message.chat.id) == "wait_question")
def q_to_opertor(message):
    global operator_user_id, states
    # qa_chat_id
    user_message = message.text
    logger.info(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –æ—Ç–ø—Ä–∞–≤–∏–ª –æ–ø–µ—Ä–∞—Ç–æ—Ä—É {operator_user_id} —Å–æ–æ–±—â–µ–Ω–∏–µ {user_message}")
    bot.send_message(operator_user_id[0], f"{message.chat.id} {user_message}")


# –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
@bot.message_handler(func=lambda message: states.get(message.chat.id) == "wait_answers")
def operator_a_to_user(message):
    # –≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    if message.text == '/oper_stop':
        bot.send_message(operator_user_id[-1], f'–í–∞—à–µ –æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–æ—Å—å'
                                               f', –≤—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞')
        logger.info(
            f"–û–ø–µ—Ä–∞—Ç–æ—Ä {message.chat.id} –ø–µ—Ä–µ—Å—Ç–∞–ª –±—ã—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")
        states[int(operator_user_id[-1])] = ''
        return
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–æ–≥–æ user id
    try:
        qa_chat_id = str(message.reply_to_message.text[0:10])
        # int(qa_chat_id)
        if len(qa_chat_id) != 10:
            bot.send_message(operator_user_id[-1], '–í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
                                                   '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç')
            return
    except AttributeError:
        bot.send_message(operator_user_id[-1], '–í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
                                               '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç')
        return
    except ValueError:
        bot.send_message(operator_user_id[-1], '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —Å–≤–æ–µ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
                                               '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç')
        return
    # –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç —Å–µ–∞–Ω—Å–∞ –æ–±—â–µ–Ω–∏—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
    if message.text == '/a_stop':
        logger.info(
            f"–û–ø–µ—Ä–∞—Ç–æ—Ä {message.chat.id} –∑–∞–≤–µ—Ä—à–∏–ª —Å–µ–∞–Ω—Å —Å {qa_chat_id}")
        states[int(qa_chat_id)] = ''
        print(states)
        bot.send_message(qa_chat_id, "–í–∞—à–µ –æ–±—â–µ–Ω–∏–µ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–æ—Å—å, –æ–ø–µ—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Å–µ–∞–Ω—Å")
        return
    logger.info(
        f"–û–ø–µ—Ä–∞—Ç–æ—Ä {message.from_user.first_name} –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {qa_chat_id} —Å–æ–æ–±—â–µ–Ω–∏–µ {message.text}")
    bot.send_message(qa_chat_id, message.text)


# —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
@bot.message_handler(commands=['operator'])
def start_operator_mode(message):
    global operator_user_id
    logger.info(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} —Å—Ç–∞–ª –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")
    operator_user_id.append(message.from_user.id)
    bot.send_message(message.chat.id, 'üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –û–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏,'
                                      ' –æ–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.'
                                      '\n–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –≤—ã–±–∏—Ä–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–∂–º–∏—Ç–µ –æ—Ç–≤–µ—Ç–∏—Ç—å'
                                      ', —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –æ—Ç–≤–µ—Ç')
    states[message.chat.id] = "wait_answers"


# /start –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–µ
@bot.message_handler(commands=['start'])
def send_welcome(message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º.")
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ –æ–±–ª–∞—Å—Ç–∏ –∫—É–ª–∏–Ω–∞—Ä–∏–∏.")
    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True)
    for key, value in data.items():
        keyboard.add(telebot.types.KeyboardButton(key))
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ FAQ:', reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: True)
def echo_all(message):
    global rage_count, operator_user_id
    user_message = message.text
    # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ö–æ–∂–µ—Å—Ç—å —Å—Ç—Ä–æ–∫
    max_similarity = 0
    # –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
    response = None
    # —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    q_list = []
    # c–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ —Å –Ω–∞–º–µ–∫–æ–º –≤—ã–∑–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    operator_call = []
    with open('./operator_calling.txt') as file:
        for line in file:
            operator_call.append(line.rstrip())

    # –ü–æ—Ö–æ–∂–µ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∂–µ–ª–∞–Ω–∏–µ –≤—ã–∑–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    for i in operator_call:
        if similar(user_message, i) > 0.6:
            to_operator(message.chat.id)
            logger.info(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–µ–µ –Ω–∞ –ø—Ä–∏–∑—ã–≤ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"
                f"\n –æ—Ç–∫—Ä—ã–ª–∞—Å—å —Å–µ—Å—Å–∏—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")
            return

    # –ü–æ—Ö–æ–∂–µ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–æ–∫—É "–æ–ø–µ—Ä–∞—Ç–æ—Ä"
    if similar(user_message, '–æ–ø–µ—Ä–∞—Ç–æ—Ä') > 0.6:
        rage_count = rage_count + 1
        if rage_count == 3:
            to_operator(message.chat.id)
            rage_count = 0
            logger.info(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} {rage_count} –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Å—Ç—Ä–æ–∫—É \"–æ–ø–µ—Ä–∞—Ç–æ—Ä\" "
                f"\n –æ—Ç–∫—Ä—ã–ª–∞—Å—å —Å–µ—Å—Å–∏—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")
            return

    # –£–∫–∞–∑–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ, —á—Ç–æ –µ–≥–æ –≤–æ–ø—Ä–æ—Å –≤ —Å–ø–∏—Å–∫–µ –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç
    if user_message == '–ó–¥–µ—Å—å –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç':
        to_operator(message.chat.id)
        logger.info(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} —è–≤–Ω–æ —É–∫–∞–∑–∞–ª, —á—Ç–æ –µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ,"
            f"\n –æ—Ç–∫—Ä—ã–ª–∞—Å—å —Å–µ—Å—Å–∏—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")
        return

    # –í—ã—è–≤–ª–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ö–æ–∂–µ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–∞–∑–æ–π –≤–æ–ø—Ä–æ—Å–æ–≤
    for key, value in data.items():
        similarity = similar(user_message, key)
        if similarity >= max_similarity:
            max_similarity = similarity
            response = value
            print(key, similarity)

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–ø–∞–¥–∞–µ—Ç - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –∏–∑ –±–∞–∑—ã
    if max_similarity > 0.9:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å: {user_message}. –û—Ç–≤–µ—Ç: {response}")
        bot.reply_to(message, response)

    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ—Ö–æ–∂–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–±–æ–ª—å—à–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å) - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∏–∑ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    elif max_similarity > 0.6:
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True)
        for key, value in data.items():
            if similar(user_message, key) > 0.6:
                q_list.append(telebot.types.KeyboardButton(key))
        q_list.reverse()
        for i in q_list:
            keyboard.add(i)
        # keyboard.reverse()
        keyboard.add('–ó–¥–µ—Å—å –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç')
        logger.info(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å: {user_message}. "
            f"–ë–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏–ª –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –≤–µ—Ä–Ω–æ—Å—Ç–∏ –∫–æ–ª-–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ {len(q_list)}.")
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Ö–æ–∂–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', reply_markup=keyboard)

    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ—Ö–æ–∂–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–º–µ–Ω—å—à–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å) - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∏–∑ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    elif max_similarity > 0.4:
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True)
        for key, value in data.items():
            if similar(user_message, key) > 0.4:
                q_list.append(telebot.types.KeyboardButton(key))
        q_list.reverse()

        for i in q_list:
            keyboard.add(i)

        keyboard.add('–ó–¥–µ—Å—å –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç')
        logger.info(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å: {user_message}. "
            f"–ë–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏–ª –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–Ω–∏–∂–µ–Ω–Ω–æ–π –≤–µ—Ä–Ω–æ—Å—Ç–∏ –∫–æ–ª-–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ {len(q_list)}.")
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Ö–æ–∂–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', reply_markup=keyboard)

    else:  # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ—Ö–æ–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True)
        for key, value in data.items():
            keyboard.add(telebot.types.KeyboardButton(key))
        keyboard.add('–ó–¥–µ—Å—å –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç')
        logger.info(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å: {user_message}. "
            f"–ë–æ—Ç –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç, –∫–æ–ª-–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ {len(q_list)}.")
        bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                                          '–≤—ã–±–µ—Ä–∏—Ç–µ –≤ —Å–ø–∏—Å–∫–µ \"–ó–¥–µ—Å—å –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è '
                                          '–∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç\".',
                         reply_markup=keyboard)


bot.polling()
